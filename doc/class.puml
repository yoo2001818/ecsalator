@startuml

hide empty fields
hide empty methods

interface Action {
  type: String
  payload: Object
  meta: Object
}

interface JSON
interface JSONable {
  toJSON(): JSON
}
Action --|> JSON
JSON --|> JSONable

interface Function {
}

interface EventEmitter {
  emit(event, ...args)
  on(event, listener)
  once(event, listener)
  removeAllListeners(event)
  removeListener(event, listener)
}

interface Middleware {
  next: Function
  store: Store
  action: Action
}
Middleware --|> Function

interface System {
  onMount()
  onUnmount()
  handle(action)
}

class StateManager {
  push(event)
  unshift(event)
  -shift(event)
  commit()
}
StateManager --|> EventEmitter

class ChangeController {
  onMount()
  onUnmount()
}
ChangeController --* StateManager

interface State {
  {static} fromJSON(json): State
}
State --|> JSONable

class Store {
  dispatch(action)
  -handleAction(action)
}
Middleware --o Store
StateManager --* Store
System --* Store
State --* Store

@enduml
